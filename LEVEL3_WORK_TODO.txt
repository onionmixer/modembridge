# LEVEL3_WORK_TODO.txt
# Level 3 구현을 위한 단계별 작업 계획
# 생성일: 2025-10-17

## 📋 개요
LEVEL3_WORK_DESC.txt 내용 분석을 바탕으로 Level 1, Level 2, Level 3 단계별 작업 계획 수립
Level 3 시작 전에 선행되어야 할 Level 1/Level 2 보강 작업 포함

---

## 🎯 Level 1 추가 작업 (Level 3 시작 전 선행)

### 1.1 DCD 기반 상태 전이 강화
- **현재**: CONNECTING/ONLINE 상태 기반 전이
- **필요**: DCD(캐리어 감지) 기반 신뢰성 있는 상태 전이
- **작업**:
  - DCD 상승/하강 감지 로직 추가
  - 표준 결과 코드(RING/CONNECT/NO CARRIER) 기반 상태 판별
  - 명령 모드와 데이터 모드 명확한 구분
- **파일**: `src/modem.c`, `include/modem.h`

### 1.2 Serial Port 속도 제어 개선
- **현재**: 동적 협상 속도 적용
- **필요**: 안정적인 고정 속도 + 흐름제어
- **작업**:
  - DTE(호스트↔모뎀) 속도 고정 기능 (57600/115200 기본)
  - RTS/CTS 하드웨어 흐름제어 지원
  - XON/XOFF 소프트웨어 흐름제어 지원
  - 1200 bps 최악 상황 대비 로직
- **파일**: `src/serial.c`, `include/serial.h`

### 1.3 Hayes 명령 필터링 경계 명확화
- **현재**: 기본 AT 명령 처리
- **필요**: 명령 모드/데이터 모드 구분 필터링
- **작업**:
  - 명령 모드에서만 Hayes 필터링 적용
  - 데이터 모드 중 "+++" 우발 탈출 방지 (S2, S12 레지스터)
  - 에코 및 결과 코드 제어 강화 (ATE0, Q0, V1, X4)
- **파일**: `src/modem.c`

### 1.4 DTR/DCD 연동 개선
- **현재**: 기본 시그널 처리
- **필요**: 일관된 DTR/DCD 연동(&D2, &C1)
- **작업**:
  - DTR/DCD 시그널 핸들링 정규화
  - NO CARRIER 수신 시 즉시 데이터 모드 종료
  - DCD 하강 기반 즉시 정리 전이
- **파일**: `src/modem.c`, `src/serial.c`

---

## 🎯 Level 2 추가 작업 (Level 3 시작 전 선행)

### 2.1 Telnet 협상·이스케이프 처리 강화
- **현재**: 기본 IAC 처리
- **필요**: 완전한 텔넷 협상/이스케이프 구현
- **작업**:
  - BINARY 옵션 협상 및 0xFF 이스케이프 처리
  - IAC(0xFF) 시퀀스 완전 필터링 아닌 협상 처리
  - 이진 전송 지원을 위한 NVT(Network Virtual Terminal) 규격 준수
- **파일**: `src/telnet.c`, `include/telnet.h`

### 2.2 CR/LF 규칙 및 ANSI 처리 분리
- **현재**: 기본 텍스트 전달
- **필요**: 텔넷 NVT 규격 기반 처리
- **작업**:
  - CR/LF 규칙(NVT)과 ANSI 시퀀스 전달 정책 분리
  - ANSI 코드 전달 시 텔넷 규범 준수
  - 줄바꿈 변환과 탭 처리 텔넷 규범 따르기
- **파일**: `src/telnet.c`

### 2.3 트래픽 제어 및 셰이핑
- **현재**: 기본 데이터 전송
- **필요**: 저속 직렬 대응 트래픽 제어
- **작업**:
  - 직렬 속도에 맞춘 텔넷 송신 트래픽 셰이핑
  - 고수위/저수위 수위선 기반 백프레셔
  - 오버런 방지를 위한 최대 축적량 제한
- **파일**: `src/telnet.c`, `src/telnet_thread.c`

### 2.4 제어코드 처리 정밀화
- **현재**: 기본 IAC 필터링
- **필요**: 안전한 제어코드 처리
- **작업**:
  - Pipeline 2 전용 제어코드 필터링 범위 명확화
  - 직렬 장치가 이해하지 못하는 특수 제어 안전 처리
  - ANSI/일반 텍스트는 그대로 전달, 특수 제어는 드롭/변환
- **파일**: `src/telnet.c`

---

## 🎯 Level 3 작업 (핵심 구현)

### 3.1 기본 파이프라인 구조 (기 구현 완료)
- **현재**: ✅ 완료됨 (이중 버퍼, 기본 스케줄링)
- **향후 개선**:
  - Half-duplex 게이트 최적화 (물리적 전이중 지원 확인)
  - 짧은 타임슬라이스(32-128바이트 단위) 교대 처리
  - Lock-free 원형 버퍼로 잠금 경쟁 최소화

### 3.2 상태 머신 완성
- **작업**:
  - 명확한 상태 전이 정의: 초기화→대기(명령 모드)→응답/협상→데이터 모드→종료
  - 각 상태별 타임아웃 설정
  - Pipeline 시작/종료 조건 명확화:
    - Level 1+Level 2 준비 + DCD 상승 시 Pipeline 활성화
    - 어느 한쪽 종료나 DCD 하강 시 즉시 양방향 정리·종료
- **파일**: `include/level3.h`, `src/level3.c`

### 3.3 스케줄링 및 공정성 강화
- **현재**: 기본 라운드로빈
- **필요**: 공정 분할 및 지연 상한 보장
- **작업**:
  - 바이트 N개 단위 또는 기간 T ms 단위 라운드로빈
  - 1200 bps 방향 가중치 공정 대기열 구현
  - 장시간 버스트에서도 기아 상태 없는 공정 분할
  - 양방향 지연 상한 설정 및 보장
- **파일**: `src/level3.c`

### 3.4 버퍼링 설계 보강
- **현재**: Main/Sub 이중 버퍼
- **필요**: 수위선 기반 방어 및 메모리 관리
- **작업**:
  - 고수위선 시 송신 차단/감속 로직
  - 저수위선 시 송신 재개 로직
  - 최대 축적량 설정 및 오버런 방지
  - 장시간 역방향 폭주 시 메모리 증식 방지
- **파일**: `include/level3.h`, `src/level3.c`

### 3.5 종료 처리 및 정리
- **작업**:
  - 미전송 데이터 플러시 처리
  - 타임아웃 분리로 무한 대기 방지
  - 연결 종료 시 즉시 양방향 정리
  - 리소스 완전 해제 및 초기화
- **파일**: `src/level3.c`, `src/bridge.c`

### 3.6 필터링 범위 최종 정리
- **Pipeline 1 (Serial→Telnet)**:
  - 명령 모드 결과 코드 제거 (OK, RING, CONNECT, NO CARRIER)
  - 에코 제거
  - 데이터 모드 전환 후 무해한 제어코드만 최소화
- **Pipeline 2 (Telnet→Serial)**:
  - 텔넷 제어(IAC) 완전 처리
  - ANSI/일반 텍스트 전달
  - 직렬 장치 미이해 특수 제어 안전 처리

---

## 🔍 검증 및 테스트 계획

### 4.1 단위 테스트 시나리오
1. **기본 연결**: Level1+Level2 연결 후 Pipeline 시작
2. **저속 통신**: 1200 bps 환경에서 안정성 검증
3. **실시간 채팅**: 장시간 양방향 데이터 전송 시 기아 상태 없음
4. **연결 종료**: 각종 종료 시나리오에서 정상 정리
5. **오류 복구**: 통신 오류 시 안정적인 복구 및 재연결

### 4.2 성능 메트릭
- 양방향 지연 시간 (target: < 100ms)
- 버퍼 오버율 (target: < 1%)
- 파이프라인 스위칭 빈도
- 시스템 리소스 사용량

---

## ⚠️ 우선순위 및 위험 요소

### 🔥 높은 우선순위 (Level 3 시작 전 필수)
1. Level 1 DCD 기반 상태 전이
2. Level 2 Telnet 협상 완료
3. Serial 흐름 제어 확립

### 🔶 중간 우선순위 (Level 3 핵심)
1. 상태 머신 완성
2. 공정 스케줄링 강화
3. 버퍼링 방어 로직

### 🔷 낮은 우선순위 (최적화)
1. Half-duplex 게이트 최적화
2. Lock-free 버퍼 전환
3. 성능 튜닝

---

## 📝 작업 완료 기준

- [x] Level 1: DCD 기반 안정적 상태 전이 구현
- [x] Level 1: Serial 흐름 제어 고정/가변 지원
- [x] Level 2: Telnet 협상 및 IAC 완전 처리
- [x] Level 3: 상태 머신 완성 (초기화→종료)
- [x] Level 3: 공정 스케줄링 (지연 상한 보장)
- [x] Level 3: 수위선 기반 버퍼 방어
- [ ] 전체: 실시간 채팅 시나리오 안정화
- [ ] 전체: 연결 종료/오류 복구 완성

---

## 📝 생성 정보
- 작성자: Claude Code
- 생성일: 2025-10-17
- 기반: LEVEL3_WORK_DESC.txt 분석
- 목적: Level 3 안정적 구현을 위한 단계별 계획